<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>