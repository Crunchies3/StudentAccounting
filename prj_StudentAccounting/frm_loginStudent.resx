<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>